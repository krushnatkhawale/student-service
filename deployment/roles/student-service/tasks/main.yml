---
- name: Test connection to remote server
  ping:
- name: Force terminate if application is running already
  shell: "{{ appdir }}/stop.sh"
  args:
    chdir: "{{ appdir }}"
  ignore_errors: true
- name: Cleanup - delete pid file
  file:
    path: "{{ appdir }}/stop.sh"
    state: absent
  ignore_errors: true
- name: Create directory structure if does not exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/usr/pi-as-server"
    - "/usr/pi-as-server/student-service/"
    - "/usr/pi-as-server/student-service/config"
- name: Copying configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "config/", dest: "/usr/pi-as-server/student-service/config/" }
    - { src: "start.sh", dest: "/usr/pi-as-server/student-service/start.sh" }
    - { src: "stop.sh", dest: "/usr/pi-as-server/student-service/stop.sh" }
- name: Enabled execute mode for startup scripts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "u+rwx"
  with_items:
    - { src: "start.sh", dest: "/usr/pi-as-server/student-service/start.sh" }
    - { src: "stop.sh", dest: "/usr/pi-as-server/student-service/stop.sh" }
- name: Copying application JAR file
  copy:
    src: "{{ item }}"
    dest: "/usr/pi-as-server/student-service/student-service.jar"
  with_fileglob:
    - app*
- name: Start student-service application through start.sh
  shell: "/usr/pi-as-server/student-service/start.sh"
  args:
    chdir: "/usr/pi-as-server/student-service"
    creates: "/usr/pi-as-server/student-service/student-service.pid"